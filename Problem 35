def is_prime(n):
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True


def rotations(n):
    s = str(n)
    return [int(s[i:] + s[:i]) for i in range(len(s))]


def is_circular_prime(n):
    for rotation in rotations(n):
        if not is_prime(rotation):
            return False
    return True


limit = 1000000


def count_circular_primes(limit):
    count = 0
    for i in range(2, limit):
        if is_circular_prime(i):
            count += 1
    return count


result = count_circular_primes(limit)
print(f"Number of circular primes below {limit}: {result}")
